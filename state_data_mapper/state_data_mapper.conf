[

    # StateConfig(
    #     state="Texas",
    #     state_abbreviation="TX",
    #     source_filepath="TX_Data_All_Waves.xlsx",
    #     target_filepath="TX_schools.csv",
    #     source_sheet_name="Texas",
    #     column_mappings=[
    #         ColumnMapping(
    #             target_column="State",
    #             dtype=pd.StringDtype(),
    #             constant="Texas"),
    #         ColumnMapping(
    #             target_column="StateAbbrev",
    #             dtype=pd.StringDtype(),
    #             constant="TX"),
    #         ColumnMapping(
    #             target_column="SchoolName",
    #             source_column="SchoolName",
    #             dtype=pd.StringDtype()),
    #         ColumnMapping(
    #             target_column="DistrictName",
    #             source_column="DistrictName_new",
    #             dtype=pd.StringDtype()),
    #         ColumnMapping(
    #             target_column="NCESSchoolID",
    #             source_column="ncessch",
    #             dtype=pd.StringDtype()),
    #         ColumnMapping(
    #             target_column="NCESDistrictID",
    #             source_column="leaid",
    #             dtype=pd.StringDtype()),
    #         ColumnMapping(
    #             target_column="NewCasesStudents",
    #             source_column="NewStudentCases",
    #             dtype=pd.Int64Dtype()),
    #         ColumnMapping(
    #             target_column="NewCasesStaff",
    #             source_column="staff_cases",
    #             dtype=pd.Int64Dtype()),
    #         ColumnMapping(
    #             target_column="TimePeriodStart",
    #             source_column="biweekly_date",
    #             dtype="datetime64"),
    #         ColumnMapping(
    #             target_column="TimePeriodEnd",
    #             source_column="TimePeriodEnd",
    #             dtype="datetime64",
    #             calculation=lambda row: row["TimePeriodStart"] + pd.to_timedelta(13, unit="d")
    #         ),
    #     ],
    # ),
    StateConfig(
        state="Iowa",
        state_abbreviation="IA",
        source_filepath="Iowa_dist_school.xlsx",
        target_filepath="IA_schools.csv",
        source_sheet_name="Iowa (schools)",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Iowa"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="IA"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School",
                dtype=pd.StringDtype()),
              ColumnMapping(
                target_column="DistrictName",
                source_column="District",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="Current Positive Students",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="Current Positive Staff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesUnknown",
                source_column="Current Positive Unknown",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Current Positives (All Types)",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Total Positive Students",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="Total Positive Staff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesUnknown",
                source_column="Total Positive Unknown",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="Total Positives (All Types)",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]

            ),
        ],
    ), 
    StateConfig(
        state="Iowa",
        state_abbreviation="IA",
        source_filepath="Iowa_dist_school.xlsx",
        target_filepath="IA_districts.csv",
        source_sheet_name="Iowa (districts)",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Iowa"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="IA"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="DistrictName",
                source_column="District",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="Current Positive Students",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="Current Positive Staff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesUnknown",
                source_column="Current Positive Unknown",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Current Positives (All Types)",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Total Positive Students",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="Total Positive Staff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesUnknown",
                source_column="Total Positive Unknown",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="Total Positives (All Types)",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]

            ),
        ],
    ),  
    
    StateConfig(
        state="Montana",
        state_abbreviation="MT",
        source_filepath="Montana.xlsx",
        target_filepath="MT_schools.csv",
        source_sheet_name="Table 3",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Montana"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="MT"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="# staff positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="# students positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Total # cases associated with school",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
            ),
        ],
    ),
    StateConfig(
        state="New York",
        state_abbreviation="NY",
        source_filepath="NewYork_CaseData.xlsx",
        target_filepath="NY_schools.csv",
        source_sheet_name="New York",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="New York"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="NY"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="student_cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="staff_cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="biweekly_date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",
                calculation=lambda row: row["TimePeriodStart"] + pd.to_timedelta(13, unit="d")
            ),
        ],
    ),    
    StateConfig(
        state="Indiana",
        state_abbreviation="IN",
        source_filepath="Indiana.xlsx",
        target_filepath="IN_schools.csv",
        source_sheet_name="Data for Indiana",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Indiana"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="IN"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Student Cases (cumulative)",
                dtype="object",
                converter_dict={
                  "<5": "<5",
                }),
            ColumnMapping(
                target_column="_CumulativeCasesStaff",
                source_column="Staff Cases (cululative)",
                dtype=pd.StringDtype(),
                is_temporary=True
            ),
            ColumnMapping(
                target_column="_CumulativeCasesTeachers",
                source_column="Teacher Cases (cululative)", 
                dtype=pd.StringDtype(),
                is_temporary=True
            ),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                dtype="object",
                calculation=lambda row: (
                    "<" if (
                        "<" in row["_CumulativeCasesStaff"] or
                        "<" in row["_CumulativeCasesTeachers"])
                    else ""
                ) + str(
                    int(float(row["_CumulativeCasesStaff"].replace("<", ""))) +
                    int(float(row["_CumulativeCasesTeachers"].replace("<", "")))
                )
            ), 
            ColumnMapping(
                target_column="TimePeriodEnd", 
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
            ),
        ],
    ), 
    StateConfig(
        state="Florida",
        state_abbreviation="FL",
        source_filepath="FL_Data_All_Waves.xlsx",
        target_filepath="FL_schools.csv",
        source_sheet_name="All Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Florida"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="FL"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="DistrictName",
                source_column="DistrictName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="totalcases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="student_cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="_ActiveCasesStaff",
                source_column="staff_cases",
                dtype=pd.Int64Dtype(),
                is_temporary=True),
            ColumnMapping(
                target_column="_ActiveCasesTeachers",
                source_column="teacher_cases", 
                dtype=pd.Int64Dtype(),
                is_temporary=True),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                dtype=pd.Int64Dtype(),
                calculation=lambda row: row["_ActiveCasesStaff"] + row["_ActiveCasesTeachers"]),
            ColumnMapping(
                target_column="ActiveCasesUnknown",
                source_column="unknown",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="biweekly_date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodStart"] + pd.to_timedelta(14, unit="d")
            ),
        ],
    ),
    StateConfig(
        state="Illinois",
        state_abbreviation="IL",
        source_filepath="Illinois.xlsx",
        target_filepath="IL_schools.csv",
        source_sheet_name="Data for Illinois",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Illinois"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="IL"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Cases",
                dtype="object",
                converter_dict={
                  "5-10 (Staff & Students)": "5-10",
                  "16+ (Students)": "16+",
                  "16+ (Staff & Students)": "16+",
                  "5-10 (Students)": "5-10",
                  "11-16 (Students)": "11-16",
                  "11-16 (Other)": "11-16",
                  "5-10 (Staff)": "5-10",
                  "11-16 (Staff & Students)": "11-16",
                  "11-16 Cases (Staff & Students)": "11-16",
                  "5-10 (Staff & Students": "5-10"
                }),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")            
            ),
        ],
    ),      
    StateConfig(
        state="Idaho",
        state_abbreviation="ID",
        source_filepath="Idaho.xlsx",
        target_filepath="ID_schools.csv",
        source_sheet_name="Idaho",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Idaho"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="ID"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="TimePeriodInterval",
                source_column="TimePeriodInterval",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64"),
            ColumnMapping(
                target_column="NewCasesStaffStudentsCombined",
                source_column="NewCases",
                dtype="object",
                converter_dict={
                  "1+": "1+",
                  "2+": "2+",
                  "3+": "3+",
                  "4+": "4+", 
                  "5+": "5+", 
                  "6+": "6+",
                  "7+": "7+",
                },
                na_values=["`", "-","n/a"]),
            ColumnMapping(
                target_column="CumulativeCasesUnknown",
                source_column="CumulativeCases",
                dtype="object",
                converter_dict={
                  "1+": "1+",
                  "2+": "2+",
                  "3+": "3+",
                  "4+": "4+", 
                  "5+": "5+", 
                  "6+": "6+",
                  "7+": "7+",
                  "`1": "1",
                  "1+": "1+",
                  "10+": "10+",
                  "104+": "104+",
                  "107+": "107+",
                  "109+": "109+",
                  "11+": "11+",
                  "114+": "114+",
                  "12+": "12+",
                  "121+": "121+",
                  "122+": "122+",
                  "13+": "13+",
                  "14+": "14+",
                  "15+": "15+",
                  "16+": "16+",
                  "17+": "17+",
                  "18+": "18+",
                  "19+": "19+",
                  "2+": "2+",
                  "20+": "20+",
                  "21+": "21+",
                  "22+": "22+",
                  "23+": "23+",
                  "24+": "24+",
                  "25+": "25+",
                  "26+": "26+",
                  "27+": "27+",
                  "28+": "28+",
                  "29+": "29+",
                  "3+": "3+",
                  "30+": "30+",
                  "31+": "31+",
                  "32+": "32+",
                  "33+": "33+",
                  "34+": "34+",
                  "35+": "35+",
                  "36+": "36+",
                  "37+": "37+",
                  "38+": "38+",
                  "4+": "4+",
                  "40+": "40+",
                  "41+": "41+",
                  "42+": "42+",
                  "43+": "43+",
                  "44+": "44+",
                  "45+": "45+",
                  "46+": "46+",
                  "47+": "47+",
                  "48+": "48+",
                  "49+": "49+",
                  "5+": "5+",
                  "50+": "50+",
                  "51+": "51+",
                  "52+": "52+",
                  "53+": "53+",
                  "54+": "54+",
                  "55+": "55+",
                  "56+": "56+",
                  "57+": "57+",
                  "58+": "58+",
                  "59+": "59+",
                  "6+": "6+",
                  "60+": "60+",
                  "61+": "61+",
                  "62+": "62+",
                  "63+": "63+",
                  "64+": "64+",
                  "65+": "65+",
                  "66+": "66+",
                  "67+": "67+",
                  "68+": "68+",
                  "69+": "69+",
                  "7+": "7+",
                  "70+": "70+",
                  "71+": "71+",
                  "72+": "72+",
                  "73+": "73+",
                  "75+": "75+",
                  "77+": "77+",
                  "78+": "78+",
                  "79+": "79+",
                  "8+": "8+",
                  "80+": "80+",
                  "81+": "81+",
                  "82+": "82+",
                  "84+": "84+",
                  "86+": "86+",
                  "87+": "87+",
                  "9+": "9+",
                  "90+": "90+",
                  "93+": "93+",
                  "94+": "94+",
                  "96+": "96+",
                  "98+": "98+",
                  "99+":"99+"

                },
                na_values=["`", "-","n/a", ","],

            ),
        ],
    ),  


    StateConfig(
        state="Rhode Island",
        state_abbreviation="RI",
        source_filepath="Rhode Island.xlsx",
        target_filepath="RI_schools.csv",
        source_sheet_name="Rhode Island Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Rhode Island"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="RI"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="LEA",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="In-Person Cases in Past 7 Days- Students",
                dtype="object",
                converter_dict={
                  "Fewer than five": "<5",
                  "5 to 9": "5-9",
                  "10 to 14": "10-14",
                  "15 to 19": "15-19"
                }),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="In-Person Cases in Past 7 Days- Staff",
                dtype="object",
                converter_dict={
                  "Fewer than five": "<5",
                  "5 to 9": "5-9",
                  "10 to 14": "10-14",
                  "15 to 19": "15-19"
                }),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="In-Person Cumulative Cases- Students",
                dtype="object",
                converter_dict={
                  "Fewer than five": "<5",
                  "5 to 9": "5-9",
                  "10 to 14": "10-14",
                  "15 to 19": "15-19"
                }),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="In-Person Cumulative Cases- Staff",
                dtype="object",
                converter_dict={
                  "Fewer than five": "<5",
                  "5 to 9": "5-9",
                  "10 to 14": "10-14",
                  "15 to 19": "15-19"
                }),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="In-Person Cumulative Cases- Staff and Students Combined",
                dtype="object",
                converter_dict={
                  "Fewer than five": "<5",
                  "5 to 9": "5-9",
                  "10 to 14": "10-14",
                  "15 to 19": "15-19"
                }),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64",
            ),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
            ),
        ],
    ),
    StateConfig(
        state="Nevada",
        state_abbreviation="NV",
        source_filepath="Nevada.xlsx",
        target_filepath="NV_schools.csv",
        source_sheet_name="Nevada",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Nevada"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="NV"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="DistrictName",
                source_column="DistrictName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NCESSchoolID1",
                source_column="NCESSchoolID1",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NCESSchoolID2",
                source_column="NCESSchoolID2",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NCESSchoolID3",
                source_column="NCESSchoolID3",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="DistrictNCESID",
                source_column="DistrictNCESID",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="CumulativeCasesCombined",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="CumulativeCasesStudents",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="CumulativeCasesStaff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",
            ),
        ],
    ),

    StateConfig(
        state="Virginia",
        state_abbreviation="VA",
        source_filepath="Virginia COVID school data from state.xlsx",
        target_filepath="VA_schools.csv",
        source_sheet_name="Use for Data Hub",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Virginia"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="VA"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesCombined",
                source_column="NewCasesCombined",
                dtype=pd.Int64Dtype(),
                na_values=["*"]),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",
            ),
        ],
    ),
StateConfig(
        state="Ohio",
        state_abbreviation="OH",
        source_filepath="Ohio.xlsx",
        target_filepath="OH_schools.csv",
        source_sheet_name="Ohio",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Ohio"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="OH"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NCESDistrictID",
                source_column="NCES District ID",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="NewCasesStudents",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="CumulativeCasesStudents",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="NewCasesStaff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="CumulativeCasesStaff",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",
           ),
        ],
    ), 

StateConfig(
        state="West Virginia",
        state_abbreviation="WV",
        source_filepath="West Virginia.xlsx",
        target_filepath="WV_schools.csv",
        source_sheet_name="West Virginia",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="West Virginia"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="WV"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Total Positive Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Last Update",
                dtype="datetime64"), 
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(14, unit="d")
           ),
        ],
    ), 

StateConfig(
        state="Vermont",
        state_abbreviation="VT",
        source_filepath="Vermont.xlsx",
        target_filepath="VT_schools.csv",
        source_sheet_name="Vermont",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Vermont"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="VT"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStaffStudentsCombined",
                source_column="Cases Reported in the Past 7 Days",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"), 
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
           ),
        ],
    ), 

StateConfig(
        state="Utah",
        state_abbreviation="UT",
        source_filepath="Utah.xlsx",
        target_filepath="UT_districts.csv",
        source_sheet_name="Utah Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Utah"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="UT"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="School District",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Active Cases",
                dtype="object",
                converter_dict={
                  "<5": "<5"
                  }),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="Total Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]
           ),
        ],
    ), 
StateConfig(
        state="Oregon",
        state_abbreviation="OR",
        source_filepath="Oregon.xlsx",
        target_filepath="OR_schools.csv",
        source_sheet_name="Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Oregon"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="OR"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Students",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="Staff/Volunteer Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d") 
           ),
        ],
    ), 
StateConfig(
        state="North Carolina",
        state_abbreviation="NC",
        source_filepath="North Carolina.xlsx",
        target_filepath="NC_schools.csv",
        source_sheet_name="North Carolina Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="North Carolina"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="NC"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="Facility",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="Staff Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="Children Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Total Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d") 
           ),
        ],
    ), 
 

StateConfig(
        state="New Hampshire",
        state_abbreviation="NH",
        source_filepath="New Hampshire.xlsx",
        target_filepath="NH_schools.csv",
        source_sheet_name="New Hampshire Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="New Hampshire"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="NH"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Active Cases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]
           ),
        ],
    ), 

StateConfig(
        state="Massachusetts",
        state_abbreviation="MA",
        source_filepath="Massachusetts_CaseData.xlsx",
        target_filepath="MA_districts.csv",
        source_sheet_name="Massachusetts",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Massachusetts"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="MA"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="DistrictName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="StudentCases",
                dtype=pd.Int64Dtype()), 
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="StaffCases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="WeekEndDate",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
           ),
        ],
    ), 

StateConfig(
        state="Louisiana",
        state_abbreviation="LA",
        source_filepath="Louisiana.xlsx",
        target_filepath="LA_schools.csv",
        source_sheet_name="Louisiana",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Louisiana"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="LA"),
              ColumnMapping(
                target_column="DistrictName",
                source_column="Parish Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="Total Cases: Faculty/Staff/Volunteer",
                dtype="object",
                converter_dict={
                  "1-4": "1-4",
                }),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Total Cases: Student",
                dtype="object",
                converter_dict={
                  "1-4": "1-4",
                }),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="Cases Reported During Current Reporting Period: Faculty/Staff/Volunteer",
                dtype="object",
                converter_dict={
                  "1-4": "1-4",
                }),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="Cases Reported During Current Reporting Period: Student",
                dtype="object",
                converter_dict={
                  "1-4": "1-4",
                }),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
           ),
        ],
    ), 

    StateConfig(
        state="Maryland",
        state_abbreviation="MD",
        source_filepath="Maryland.xlsx",
        target_filepath="MD_schools.csv",
        source_sheet_name="Data",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Maryland"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="MD"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Number of Total Cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
            ),
        ],
    ),
    StateConfig(
        state="Colorado",
        state_abbreviation="CO",
        source_filepath="Colorado.xlsx",
        target_filepath="CO_schools.csv",
        source_sheet_name="Use for Data Hub",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Colorado"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="CO"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="SchoolName",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="NewCasesStaff",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="NewCasesStudents",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="NewCasesCombined",
                source_column="NewCasesCombined",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",
            ),
        ],
    ),

    StateConfig(
        state="Maine",
        state_abbreviation="ME",
        source_filepath="Maine.xlsx",
        target_filepath="ME_schools.csv",
        source_sheet_name="Maine Data (without totals)",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Maine"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="ME"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Number of Cases Reported in Last 30 Days",
                dtype="object",
                converter_dict={
                  "Fewer than 5": "<5",
                }),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(30, unit="d")
           ),
        ],
    ), 
    
    StateConfig(
        state="Kentucky",
        state_abbreviation="KY",
        source_filepath="Kentucky.xlsx",
        target_filepath="KY_schools.csv",
        source_sheet_name="Kentucky Data Schools Only",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Kentucky"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="KY"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="# Student Cases Reported Today",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TwoWeekPeriodCasesStudents",
                source_column="# Student Cases Reported in Last 14 Days",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="# Student Cases Ever Positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="# Staff Cases Reported Today",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TwoWeekPeriodCasesStaff",
                source_column="# Staff Cases Reported in Last 14 Days",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="# Staff Cases Ever Positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
                ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]
            ),
        ],
    ), 
    StateConfig(
        state="Kentucky",
        state_abbreviation="KY",
        source_filepath="Kentucky.xlsx",
        target_filepath="KY_districts.csv",
        source_sheet_name="Kentucky Data Districts Only",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Kentucky"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="KY"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="School District",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesStudents",
                source_column="# Student Cases Reported Today",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TwoWeekPeriodCasesStudents",
                source_column="# Student Cases Reported in Last 14 Days",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="# Student Cases Ever Positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="NewCasesStaff",
                source_column="# Staff Cases Reported Today",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TwoWeekPeriodCasesStaff",
                source_column="# Staff Cases Reported in Last 14 Days",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="# Staff Cases Ever Positive",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"]

            ),
        ],
    ),   
    StateConfig(
        state="Kansas",
        state_abbreviation="KS",
        source_filepath="Kansas.xlsx",
        target_filepath="KS_schools.csv",
        source_sheet_name="Data for Kansas",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Kansas"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="KS"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="NewCasesCombined",
                source_column="Cases in Last 14 Days",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="TimePeriodStart",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="TimePeriodEnd",
                dtype="datetime64",

            ),
        ],
    ),    

    StateConfig(
        state="Arkansas",
        state_abbreviation="AR",
        source_filepath="Arkansas.xlsx",
        target_filepath="AR_districts.csv",
        source_sheet_name="Arkansas",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Arkansas"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="AR"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Active Cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="Cumulative Faculty/Staff Cases",
                dtype=pd.Int64Dtype(),
                na_values=["--", "."]),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="Cumulative Student Cases",
                dtype=pd.Int64Dtype(),
                na_values=["--", "."]),
            ColumnMapping(
                target_column="CumulativeCasesCombined",
                source_column="Cumulative Total",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64",
                constant="6/15/2020",
 
            ),
        ],
    ),
    
    StateConfig(
        state="Connecticut",
        state_abbreviation="CT",
        source_filepath="Connecticut.xlsx",
        target_filepath="CT_schools.csv",
        source_sheet_name="Data for Connecticut",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Connecticut"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="CT"),
            ColumnMapping(
                target_column="SchoolName",
                source_column="School Name",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="DistrictName",
                source_column="District",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesCombined",
                source_column="Total Cases in School",
                dtype=pd.Int64Dtype(),
                na_values=["<6"]),
            ColumnMapping(
                target_column="TimePeriodStart",
                source_column="Report Period Start Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Period End Date",
                dtype="datetime64",
 
            ),
        ],
    ),
               
    StateConfig(
        state="Delaware",
        state_abbreviation="DE",
        source_filepath="Delaware.xlsx",
        target_filepath="DE_districts.csv",
        source_sheet_name="Delaware",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Delaware"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="DE"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="District or Setting",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="In-Person Student Cases During Reporting Period",
                dtype="object",
                converter_dict={
                  "<11*": "<11",
                },
                na_values=["Not shown*","."]),
            ColumnMapping(
                target_column="CumulativeCasesStudents",
                source_column="In-Person Student Cases: Cumulative",
                dtype="object",
                converter_dict={
                  "<11*": "<11",
                },
                na_values=["Not shown*","."]),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="In-Person Staff Cases During Reporting Period",
                dtype="object",
                converter_dict={
                  "<11*": "<11",
                },
                na_values=["Not shown*","."]),
            ColumnMapping(
                target_column="CumulativeCasesStaff",
                source_column="In-Person Staff Cases: Cumulative",
                dtype="object",
                converter_dict={
                  "<11*": "<11",
                },
                na_values=["Not shown*","."]),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
                ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
            ),
        ],
    ),
    
    StateConfig(
        state="Hawaii",
        state_abbreviation="HI",
        source_filepath="Hawaii.xlsx",
        target_filepath="HI_schools.csv",
        source_sheet_name="Data for Hawaii",
        column_mappings=[
            ColumnMapping(
                target_column="State",
                dtype=pd.StringDtype(),
                constant="Hawaii"),
            ColumnMapping(
                target_column="StateAbbrev",
                dtype=pd.StringDtype(),
                constant="HI"),
            ColumnMapping(
                target_column="DistrictName",
                source_column="Complex Area",
                dtype=pd.StringDtype()),
            ColumnMapping(
                target_column="ActiveCasesStaff",
                source_column="Staff COVID Cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="ActiveCasesStudents",
                source_column="Student COVID Cases",
                dtype=pd.Int64Dtype()),
            ColumnMapping(
                target_column="TimePeriodEnd",
                source_column="Report Date",
                dtype="datetime64"),
            ColumnMapping(
                target_column="TimePeriodStart",
                dtype="datetime64[ns]",
                calculation=lambda row: row["TimePeriodEnd"] - pd.to_timedelta(7, unit="d")
 
            ),
        ],
    ),
]
